一、主分支master

代码库应该有且只有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。
Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。


http://www.ruanyifeng.com/blog/2012/07/git.html

git pull 相当于:
git fetch origin master //从远程主机的master分支拉取最新内容
git merge FETCH_HEAD    //将拉取下来的最新内容合并到当前所在的分支中


============================================================================================
Git flow

1. 主分支Master




============================================================================================
$ git tag -l "v1.8.5*"
v1.8.5
v1.8.5-rc0
v1.8.5-rc1
v1.8.5-rc2
v1.8.5-rc3
v1.8.5.1
v1.8.5.2
v1.8.5.3
v1.8.5.4
v1.8.5.5



============================================================================================


Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）。[轻量标签本质上是将提交校验和存储到一个文件中——没有保存任何其他信息]

# 添加 annotated tag
git tag -a v1.4 -m "my version 1.4" 加tag, 并且显示信息

# 添加 lightweight tag
git tag v1.4-lw

# 显示tag 信息
git show v1.4

=============================================================================================
# 给过去某一次提交打标签
git log --pretty=oneline

vincent@vzhang:~/workspace/self/coffee$ git log --pretty=oneline
0f0539e48f3b1f98491d8269d55731cad61347c6 (HEAD -> master, origin/master, origin/HEAD) depedency version upgrade
a521c7bb19a3cb6a1f4634d06d2f461b9f3e4fb8 Add mysql no need Hibernate-sequence
39777966cd6d159fc7db1c102c3ef4d75e79ec65 upgrade lib, include Spring boot 2, Spring 5, JDK11
9017c6dbfec537114c0ef450f7b6ac96b902ba97 add nio testing
bac66fe6597db327dcb235fc3be3bb1ad3f6fb49 add cache feature
85e447052ee1ebdb0e61fe306f75cc4799efb624 add JMXTrans
5acc8d7fc9c95170a89d9c5fbc6b18e273a74409 add for perf4j performoance
e62277c71ab13dea669405f51fb23c18dd8b80d6 metric implement
5b8b0fbf1e85890731a17eba162dc1ac4261bc28 add test
da996c8f98bc5571f23d1a46c90a559bd3fcc061 add metrics feature

git tag -a v1.2 5acc8d7

=============================================================================================

上传标签
git push origin v1.5

上传多个标签
git push origin --tags

删除标签
git tag -d v1.4-lw
git push origin --delete <tagname>

=============================================================================================

git checkout feature
git merge master
相当于
git merge master feature



git checkout feature
git rebase master